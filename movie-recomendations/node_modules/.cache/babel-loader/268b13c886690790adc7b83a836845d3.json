{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\movie-recomendations\\\\src\\\\MovieSearchEngine.js\";\nimport { movieGenres } from \"./MovieGenres.js\";\nimport axios from \"axios\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport FirstContainerMovies from './FirstContainerMovies';\nimport GenreHeader from './GenreHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetMovieType(movieName) {\n  try {\n    let movieId = movieGenres.find(o => o.name === movieName);\n    axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=f76697f079ac4cc9cba2d8f4db3a80d4&with_genres=${movieId.id}`).then(response => {\n      populateContainer(response.data.results, movieName);\n    });\n  } catch (e) {}\n}\n_c = GetMovieType;\nexport function populateContainer(populateRows, movieName) {\n  const genreHeaders = ReactDOM.createRoot(document.getElementById(\"genreHeader\"));\n  genreHeaders.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(GenreHeader, {\n      genreName: movieName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this));\n  const firstcontainermovies = ReactDOM.createRoot(document.getElementById(\"firstcontainermovies\"));\n  firstcontainermovies.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(FirstContainerMovies, {\n      MovieData: populateRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GetMovieType\");","map":{"version":3,"sources":["C:/New folder/movie-recomendations/src/MovieSearchEngine.js"],"names":["movieGenres","axios","React","ReactDOM","FirstContainerMovies","GenreHeader","GetMovieType","movieName","movieId","find","o","name","get","id","then","response","populateContainer","data","results","e","populateRows","genreHeaders","createRoot","document","getElementById","render","firstcontainermovies"],"mappings":";AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,OAAQ,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACrC,MAAI;AACF,QAAIC,OAAO,GAAGR,WAAW,CAACS,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWJ,SAAnC,CAAd;AACAN,IAAAA,KAAK,CACFW,GADH,CAEK,oGAAmGJ,OAAO,CAACK,EAAG,EAFnH,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,iBAAiB,CAACD,QAAQ,CAACE,IAAT,CAAcC,OAAf,EAAuBX,SAAvB,CAAjB;AACD,KANH;AAOD,GATD,CASE,OAAOY,CAAP,EAAU,CAEX;AACF;KAbcb,Y;AAejB,OAAO,SAASU,iBAAT,CAA2BI,YAA3B,EAAwCb,SAAxC,EAAmD;AAEtD,QAAMc,YAAY,GAAGlB,QAAQ,CAACmB,UAAT,CACjBC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CADiB,CAArB;AAIEH,EAAAA,YAAY,CAACI,MAAb,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAElB;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAMF,QAAMmB,oBAAoB,GAAGvB,QAAQ,CAACmB,UAAT,CAC3BC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,CAD2B,CAA7B;AAIAE,EAAAA,oBAAoB,CAACD,MAArB,eACA,QAAC,KAAD,CAAO,UAAP;AAAA,2BACI,QAAC,oBAAD;AAAsB,MAAA,SAAS,EAAEL;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAOD","sourcesContent":["\r\nimport { movieGenres } from \"./MovieGenres.js\";\r\nimport axios from \"axios\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport FirstContainerMovies from './FirstContainerMovies';\r\nimport GenreHeader from './GenreHeader';\r\nexport  function GetMovieType(movieName) {\r\n    try {\r\n      let movieId = movieGenres.find((o) => o.name === movieName);\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=f76697f079ac4cc9cba2d8f4db3a80d4&with_genres=${movieId.id}`\r\n        )\r\n        .then((response) => {\r\n          populateContainer(response.data.results,movieName);\r\n        });\r\n    } catch (e) {\r\n      \r\n    }\r\n  }\r\n\r\nexport function populateContainer(populateRows,movieName) {\r\n\r\n    const genreHeaders = ReactDOM.createRoot(\r\n        document.getElementById(\"genreHeader\")\r\n      );\r\n  \r\n      genreHeaders.render(\r\n        <React.StrictMode>    \r\n            <GenreHeader genreName={movieName}/>\r\n        </React.StrictMode>\r\n        ); \r\n\r\n    const firstcontainermovies = ReactDOM.createRoot(\r\n      document.getElementById(\"firstcontainermovies\")\r\n    );\r\n\r\n    firstcontainermovies.render(\r\n    <React.StrictMode>    \r\n        <FirstContainerMovies MovieData={populateRows}/>\r\n    </React.StrictMode>\r\n    );\r\n\r\n\r\n  }"]},"metadata":{},"sourceType":"module"}