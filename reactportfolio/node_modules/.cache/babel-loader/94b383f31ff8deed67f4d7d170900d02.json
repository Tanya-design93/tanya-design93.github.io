{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\movie-recomendations\\\\src\\\\SearchButton.js\";\nimport \"./SearchButtonStyle.css\";\nimport { movieGenres } from \"./MovieGenres.js\";\nimport axios from \"axios\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport FirstContainerMovies from './FirstContainerMovies'; // image url prefix: https://image.tmdb.org/t/p/w500//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchButton() {\n  function GetMovieType(movieName) {\n    try {\n      let movieId = movieGenres.find(o => o.name === movieName);\n      axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=f76697f079ac4cc9cba2d8f4db3a80d4&with_genres=${movieId.id}`).then(response => {\n        console.log(response.data);\n        populateContainer(response.data.results);\n      });\n    } catch (e) {\n      alert(\"No Movies found\");\n    }\n  }\n\n  function populateContainer(populateRows) {\n    const firstcontainermovies = ReactDOM.createRoot(document.getElementById(\"firstcontainermovies\"));\n    firstcontainermovies.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainerMovies, {\n        MovieData: populateRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this));\n\n    for (var i = 0; i < populateRows.length; i++) {\n      console.log(populateRows[i]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"buttonstyle\",\n    type: \"button\",\n    onClick: () => GetMovieType(document.getElementById(\"inputstyle\").value),\n    children: \"Click Me!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SearchButton;\nexport default SearchButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchButton\");","map":{"version":3,"sources":["C:/New folder/movie-recomendations/src/SearchButton.js"],"names":["movieGenres","axios","React","ReactDOM","FirstContainerMovies","SearchButton","GetMovieType","movieName","movieId","find","o","name","get","id","then","response","console","log","data","populateContainer","results","e","alert","populateRows","firstcontainermovies","createRoot","document","getElementById","render","i","length","value"],"mappings":";AAAA,OAAO,yBAAP;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CAEA;;;;AACA,SAASC,YAAT,GAAwB;AACtB,WAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,QAAI;AACF,UAAIC,OAAO,GAAGR,WAAW,CAACS,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWJ,SAAnC,CAAd;AACAN,MAAAA,KAAK,CACFW,GADH,CAEK,oGAAmGJ,OAAO,CAACK,EAAG,EAFnH,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAC,QAAAA,iBAAiB,CAACJ,QAAQ,CAACG,IAAT,CAAcE,OAAf,CAAjB;AACD,OAPH;AAQD,KAVD,CAUE,OAAOC,CAAP,EAAU;AACVC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACD;AACF;;AAED,WAASH,iBAAT,CAA2BI,YAA3B,EAAyC;AACvC,UAAMC,oBAAoB,GAAGrB,QAAQ,CAACsB,UAAT,CAC3BC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,CAD2B,CAA7B;AAIAH,IAAAA,oBAAoB,CAACI,MAArB,eACA,QAAC,KAAD,CAAO,UAAP;AAAA,6BACI,QAAC,oBAAD;AAAsB,QAAA,SAAS,EAAEL;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;;AAMA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACO,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5Cb,MAAAA,OAAO,CAACC,GAAR,CAAYM,YAAY,CAACM,CAAD,CAAxB;AACD;AACF;;AACD,sBACE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMvB,YAAY,CAACoB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCI,KAAvC,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAzCQ1B,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import \"./SearchButtonStyle.css\";\r\nimport { movieGenres } from \"./MovieGenres.js\";\r\nimport axios from \"axios\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport FirstContainerMovies from './FirstContainerMovies';\r\n\r\n// image url prefix: https://image.tmdb.org/t/p/w500//\r\nfunction SearchButton() {\r\n  function GetMovieType(movieName) {\r\n    try {\r\n      let movieId = movieGenres.find((o) => o.name === movieName);\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=f76697f079ac4cc9cba2d8f4db3a80d4&with_genres=${movieId.id}`\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          populateContainer(response.data.results);\r\n        });\r\n    } catch (e) {\r\n      alert(\"No Movies found\");\r\n    }\r\n  }\r\n\r\n  function populateContainer(populateRows) {\r\n    const firstcontainermovies = ReactDOM.createRoot(\r\n      document.getElementById(\"firstcontainermovies\")\r\n    );\r\n\r\n    firstcontainermovies.render(\r\n    <React.StrictMode>    \r\n        <FirstContainerMovies MovieData={populateRows}/>\r\n    </React.StrictMode>\r\n    );\r\n\r\n    for (var i = 0; i < populateRows.length; i++) {\r\n      console.log(populateRows[i]);\r\n    }\r\n  }\r\n  return (\r\n    <button\r\n      id=\"buttonstyle\"\r\n      type=\"button\"\r\n      onClick={() => GetMovieType(document.getElementById(\"inputstyle\").value)}\r\n    >\r\n      Click Me!\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SearchButton;"]},"metadata":{},"sourceType":"module"}